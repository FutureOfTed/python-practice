# 양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.
# 1, 2, 4, 8, 16, 32 → 1, 32 제외 / 1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, 72 → 1, 72 제외
# (2, 4, 8, 16, 32) / (2, 3, 4, 6, 8, 9, 12, 18, 24, 36, 72) → 앞에서 1번째, 뒤에서 1번째 곱하면 N이 된다.
# 1, 2, 4 / 1, 3, 9 / 1, 5, 25 / 1, 7, 49 → 제곱수는 약수의 갯수 1개
# 첫째 줄에 N의 진짜 약수의 개수가 주어진다. 이 개수는 50보다 작거나 같은 자연수이다.
# 둘째 줄에는 N의 진짜 약수가 주어진다. 1,000,000보다 작거나 같고, 2보다 크거나 같은 자연수이고, 중복되지 않는다

import sys

# p = N의 약수의 개수
p = int(input())

# N의 약수의 개수는 50보다 작거나 같은 자연수
if p <= 50:
    r = map(int, sys.stdin.readline().split())
    r_list = list(r)
    # 앞에서 1번째, 뒤에서 1번째인 수가 곱해져 N이 되도록 정렬
    r_list.sort()

    if p == 1:
        print(pow(r_list[0], 2))
    else:
        print(r_list[0] * r_list[-1])




